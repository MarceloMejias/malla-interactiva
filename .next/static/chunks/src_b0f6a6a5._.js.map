{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/components/SubjectCard.tsx"],"sourcesContent":["'use client';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport type { Subject, SubjectState, CalculatorState, SubjectColors } from '@/types/curriculum';\n\ninterface SubjectCardProps {\n  subject: Subject;\n  state: SubjectState | undefined;\n  onStateChange: (state: SubjectState) => void;\n  color: string;\n  categoryName: string;\n  onPrerequisiteClick: (subjectCode: string) => void;\n  findSubjectByCode: (code: string) => Subject | undefined;\n  subjectStates: CalculatorState;\n  colors: SubjectColors;\n  darkMode?: boolean;\n}\n\nexport default function SubjectCard({ \n  subject, \n  state, \n  onStateChange, \n  color,\n  categoryName,\n  onPrerequisiteClick,\n  findSubjectByCode,\n  subjectStates,\n  colors,\n  darkMode = false\n}: SubjectCardProps) {\n\n  const canTakeSubject = () => {\n    // Si no tiene prerrequisitos, siempre se puede tomar\n    if (subject.prerequisites.length === 0) return true;\n    // Verificar que todos los prerrequisitos estén aprobados\n    return subject.prerequisites.every((prereqCode: string) => {\n      const prereqState = subjectStates[prereqCode];\n      return prereqState?.status === 'approved';\n    });\n  };\n\n  const isBlocked = !canTakeSubject() && state?.status !== 'approved';\n\n  // Devuelve clases de texto y borde con el color de la categoría como texto\n  const getStatusColor = () => {\n    if (isBlocked) {\n      return 'border-gray-300 cursor-not-allowed';\n    }\n    switch (state?.status) {\n      case 'approved':\n        return 'border-green-300';\n      default:\n        return 'border-gray-200 hover:border-gray-400';\n    }\n  };\n\n  // El color del texto principal (ahora blanco para contrastar con el fondo de color)\n  const getTextColor = () => {\n    if (isBlocked) return '#9ca3af'; // gray-400\n    if (state?.status === 'approved') return '#fff'; // blanco para green-50\n    // blanco para contrastar con el color de fondo\n    return '#fff';\n  };\n\n  // El fondo ahora usa el color de la categoría\n  const getBackgroundColor = () => {\n    if (isBlocked) return darkMode ? '#4b5563' : '#6b7280'; // gray-600 (dark) / gray-500 (light)\n    if (state?.status === 'approved') return '#10b981'; // green-500 (same for both modes)\n    // color de la categoría del JSON\n    return color || (darkMode ? '#374151' : '#fff'); // gray-700 (dark) / white (light)\n  };\n\n  const handleClick = () => {\n    // No permitir cambios si está bloqueada (excepto si ya está aprobada)\n    if (isBlocked) return;\n    \n    // Alternar entre pendiente y aprobado con un simple click\n    const newStatus = state?.status === 'approved' ? 'pending' : 'approved';\n    onStateChange({ status: newStatus });\n  };\n\n  const PrerequisiteChip = ({ prereqCode }: { prereqCode: string }) => {\n    const prereqSubject = findSubjectByCode(prereqCode);\n    const prereqState = subjectStates[prereqCode];\n    if (!prereqSubject) {\n      return (\n        <span className=\"inline-block text-xs px-2 py-1 rounded bg-white/20 text-white/80\">\n          {prereqCode}\n        </span>\n      );\n    }\n    // Color de la categoría del prerrequisito\n    const prereqColor = colors[prereqSubject.type]?.[0] || '#6b7280';\n    return (\n      <button\n        onClick={e => {\n          e.stopPropagation();\n          onPrerequisiteClick(prereqCode);\n        }}\n        className={`inline-flex items-center gap-1 text-xs px-1.5 py-0.5 rounded font-bold text-white hover:brightness-110 transition-all`}\n        style={{ backgroundColor: prereqColor }}\n        title={`${prereqSubject.name} (${prereqCode}) - Click para ir al ramo`}\n      >\n        <span>{prereqCode}</span>\n        <div \n          className={`w-2 h-2 rounded-full border border-white ${\n            prereqState?.status === 'approved' ? 'bg-green-400' : 'bg-red-400'\n          }`}\n        />\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"relative group w-full\">\n      <div\n        className={`relative rounded-xl border ${getStatusColor()} cursor-pointer transition-all duration-300 overflow-hidden shadow-md hover:shadow-lg transform hover:scale-[1.02] min-h-[100px] flex flex-col w-full`}\n        style={{ backgroundColor: getBackgroundColor() }}\n        onClick={handleClick}\n        title={\n          isBlocked\n            ? `${subject.name} - Bloqueada: completa los prerrequisitos primero`\n            : `${subject.name} - Click para ${state?.status === 'approved' ? 'marcar como pendiente' : 'marcar como aprobada'}`\n        }\n      >\n        {/* Código como carátula en esquina superior izquierda */}\n        <div className={`absolute top-0 left-0 ${darkMode ? 'bg-gray-800/90' : 'bg-white/85'} rounded-br-lg px-2 py-0.5`}>\n          <span className=\"text-xs font-bold\" style={{ color: getBackgroundColor() }}>\n            {subject.code}\n          </span>\n        </div>\n        \n        {/* Créditos como carátula en esquina superior derecha */}\n        <div className={`absolute top-0 right-0 ${darkMode ? 'bg-gray-800/90' : 'bg-white/85'} rounded-bl-lg px-2 py-0.5`}>\n          <span className=\"text-xs font-bold\" style={{ color: getBackgroundColor() }}>\n            {subject.sctCredits}\n          </span>\n        </div>\n        \n        {/* Icono de bloqueo como carátula en esquina inferior derecha */}\n        {isBlocked && (\n          <div className={`absolute bottom-0 right-0 ${darkMode ? 'bg-gray-800/90' : 'bg-white/85'} rounded-tl-lg px-2 py-0.5`}>\n            <FontAwesomeIcon icon={faLock} className=\"text-xs\" style={{ color: getBackgroundColor() }} />\n          </div>\n        )}\n        \n        {/* Contenido principal */}\n        <div className=\"flex-1 px-3 pt-10 pb-2\">\n          <h3 className=\"font-bold text-xs leading-tight text-white mb-1 flex items-center gap-1\">\n            {subject.name}\n          </h3>\n          \n          {/* Prerrequisitos */}\n          {subject.prerequisites.length > 0 && (\n            <div className=\"mt-auto\">\n              <div className=\"flex flex-wrap gap-1\">\n                {subject.prerequisites.map((prereq: string) => (\n                  <PrerequisiteChip key={prereq} prereqCode={prereq} />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Indicador de estado visual removido */}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/components/StatsBar.tsx"],"sourcesContent":["'use client';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle, faRotateLeft, faPlay } from '@fortawesome/free-solid-svg-icons';\n\ninterface Stats {\n  approvedCredits: number;\n  totalCredits: number;\n  approvedSubjects: number;\n  totalSubjects: number;\n  percentage: number;\n}\n\ninterface StatsBarProps {\n  stats: Stats;\n  onShowCategories: () => void;\n  onReset: () => void;\n  onPlayGraduationPlan: () => void;\n  darkMode?: boolean;\n}\n\nexport default function StatsBar({ stats, onShowCategories, onReset, onPlayGraduationPlan, darkMode = false }: StatsBarProps) {\n  const handleReset = () => {\n    onReset();\n  };\n\n  return (\n    <div className=\"fixed bottom-4 left-4 right-4 z-50\">\n      <div className={`${darkMode ? 'bg-gray-800/90 border-gray-600' : 'bg-white/80 border-gray-200'} rounded-xl shadow-lg border p-4 mx-auto max-w-3xl`}>\n        <div className=\"flex items-center justify-between gap-6\">\n          {/* Stats */}\n          <div className=\"flex items-center gap-6\">\n            <div className=\"text-center\">\n              <div className=\"text-lg font-bold text-green-600\">\n                {stats.approvedCredits}\n              </div>\n              <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>Créditos</div>\n              <div className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>de {stats.totalCredits}</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-lg font-bold text-blue-600\">\n                {stats.approvedSubjects}\n              </div>\n              <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>Asignaturas</div>\n              <div className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>de {stats.totalSubjects}</div>\n            </div>\n          </div>\n\n          {/* Progress - Centered */}\n          <div className=\"flex items-center gap-3 flex-1 justify-center\">\n            <div className=\"text-center flex-shrink-0\">\n              <div className=\"text-lg font-bold text-purple-600\">\n                {stats.percentage.toFixed(1)}%\n              </div>\n              <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>Progreso</div>\n            </div>\n            <div className=\"flex-1 max-w-xs\">\n              <div className={`w-full ${darkMode ? 'bg-gray-600' : 'bg-gray-200'} rounded-full h-2 overflow-hidden`}>\n                <div \n                  className=\"bg-gradient-to-r from-purple-500 to-pink-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${stats.percentage}%` }}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={onPlayGraduationPlan}\n              className=\"w-9 h-9 bg-green-500 hover:bg-green-600 text-white rounded-full transition-all duration-300 flex items-center justify-center hover:shadow-md hover:scale-105\"\n              title=\"Ver plan de graduación\"\n            >\n              <FontAwesomeIcon icon={faPlay} className=\"text-sm\" />\n            </button>\n            <button\n              onClick={onShowCategories}\n              className=\"w-9 h-9 bg-blue-500 hover:bg-blue-600 text-white rounded-full transition-all duration-300 flex items-center justify-center hover:shadow-md hover:scale-105\"\n              title=\"Ver categorías de asignaturas\"\n            >\n              <FontAwesomeIcon icon={faInfoCircle} className=\"text-sm\" />\n            </button>\n            <button\n              onClick={handleReset}\n              className=\"w-9 h-9 bg-red-500 hover:bg-red-600 text-white rounded-full transition-all duration-300 flex items-center justify-center hover:shadow-md hover:scale-105\"\n              title=\"Reiniciar progreso\"\n            >\n              <FontAwesomeIcon icon={faRotateLeft} className=\"text-sm\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAqBe,SAAS,SAAS,KAA2F;QAA3F,EAAE,KAAK,EAAE,gBAAgB,EAAE,OAAO,EAAE,oBAAoB,EAAE,WAAW,KAAK,EAAiB,GAA3F;IAC/B,MAAM,cAAc;QAClB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAW,AAAC,GAA8E,OAA5E,WAAW,mCAAmC,+BAA8B;sBAC7F,cAAA,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACZ,MAAM,eAAe;;;;;;kDAExB,6LAAC;wCAAI,WAAW,AAAC,WAAuD,OAA7C,WAAW,kBAAkB;kDAAmB;;;;;;kDAC3E,6LAAC;wCAAI,WAAW,AAAC,WAAuD,OAA7C,WAAW,kBAAkB;;4CAAmB;4CAAI,MAAM,YAAY;;;;;;;;;;;;;0CAEnG,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACZ,MAAM,gBAAgB;;;;;;kDAEzB,6LAAC;wCAAI,WAAW,AAAC,WAAuD,OAA7C,WAAW,kBAAkB;kDAAmB;;;;;;kDAC3E,6LAAC;wCAAI,WAAW,AAAC,WAAuD,OAA7C,WAAW,kBAAkB;;4CAAmB;4CAAI,MAAM,aAAa;;;;;;;;;;;;;;;;;;;kCAKtG,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;4CACZ,MAAM,UAAU,CAAC,OAAO,CAAC;4CAAG;;;;;;;kDAE/B,6LAAC;wCAAI,WAAW,AAAC,WAAuD,OAA7C,WAAW,kBAAkB;kDAAmB;;;;;;;;;;;;0CAE7E,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAW,AAAC,UAAkD,OAAzC,WAAW,gBAAgB,eAAc;8CACjE,cAAA,6LAAC;wCACC,WAAU;wCACV,OAAO;4CAAE,OAAO,AAAC,GAAmB,OAAjB,MAAM,UAAU,EAAC;wCAAG;;;;;;;;;;;;;;;;;;;;;;kCAO/C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,WAAU;gCACV,OAAM;0CAEN,cAAA,6LAAC,uKAAA,CAAA,kBAAe;oCAAC,MAAM,2KAAA,CAAA,SAAM;oCAAE,WAAU;;;;;;;;;;;0CAE3C,6LAAC;gCACC,SAAS;gCACT,WAAU;gCACV,OAAM;0CAEN,cAAA,6LAAC,uKAAA,CAAA,kBAAe;oCAAC,MAAM,2KAAA,CAAA,eAAY;oCAAE,WAAU;;;;;;;;;;;0CAEjD,6LAAC;gCACC,SAAS;gCACT,WAAU;gCACV,OAAM;0CAEN,cAAA,6LAAC,uKAAA,CAAA,kBAAe;oCAAC,MAAM,2KAAA,CAAA,eAAY;oCAAE,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7D;KAzEwB","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/components/GraduationPlanModal.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faGraduationCap, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\n\ninterface SemesterPlan {\n  semester: string; // Cambio de number a string para formato \"2025-1\"\n  subjects: Subject[];\n  credits: number;\n}\n\ninterface Subject {\n  name: string;\n  code: string;\n  sctCredits: number;\n  type: string;\n}\n\ninterface GraduationPlanModalProps {\n  show: boolean;\n  graduationPlan: SemesterPlan[];\n  isAnimating: boolean;\n  onClose: () => void;\n  colors: Record<string, string[]>;\n}\n\nexport default function GraduationPlanModal({ \n  show, \n  graduationPlan, \n  isAnimating, \n  onClose, \n  colors \n}: GraduationPlanModalProps) {\n  const [visibleSemesters, setVisibleSemesters] = useState(0);\n\n  useEffect(() => {\n    if (isAnimating && graduationPlan.length > 0) {\n      setVisibleSemesters(0);\n      const interval = setInterval(() => {\n        setVisibleSemesters(prev => {\n          if (prev >= graduationPlan.length) {\n            clearInterval(interval);\n            return prev;\n          }\n          return prev + 1;\n        });\n      }, 1000); // Mostrar un semestre cada segundo\n\n      return () => clearInterval(interval);\n    }\n  }, [isAnimating, graduationPlan.length]);\n\n  useEffect(() => {\n    if (show && !isAnimating) {\n      setVisibleSemesters(graduationPlan.length);\n    }\n  }, [show, isAnimating, graduationPlan.length]);\n\n  if (!show) return null;\n\n  const totalSemesters = graduationPlan.length;\n  const totalCredits = graduationPlan.reduce((sum, semester) => sum + semester.credits, 0);\n\n  return (\n    <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm z-60 flex items-center justify-center p-4\">\n      <div className=\"bg-white/95 backdrop-blur-lg rounded-3xl shadow-2xl border border-white/30 max-w-6xl w-full max-h-[80vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-green-600/80 to-blue-600/80 backdrop-blur-lg text-white p-6 flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center\">\n              <FontAwesomeIcon icon={faGraduationCap} className=\"text-white\" />\n            </div>\n            <div>\n              <h3 className=\"text-xl font-bold\">Plan de Graduación</h3>\n              <p className=\"text-sm text-white/80\">\n                {totalSemesters} semestres • {totalCredits} créditos restantes\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-white/80 hover:text-white transition-colors p-2 hover:bg-white/10 rounded-2xl backdrop-blur-sm\"\n          >\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n          {graduationPlan.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <FontAwesomeIcon icon={faGraduationCap} className=\"text-6xl text-green-500 mb-4\" />\n              <h4 className=\"text-2xl font-bold text-gray-800 mb-2\">¡Felicitaciones!</h4>\n              <p className=\"text-gray-600\">Ya has completado todas las asignaturas de la carrera.</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n              {graduationPlan.slice(0, visibleSemesters).map((semesterPlan, index) => (\n                <div \n                  key={semesterPlan.semester}\n                  className={`bg-white/50 backdrop-blur-sm rounded-2xl p-4 border border-gray-200 transition-all duration-500 transform ${\n                    isAnimating && index === visibleSemesters - 1 \n                      ? 'scale-105 ring-2 ring-blue-400 shadow-lg' \n                      : 'scale-100'\n                  }`}\n                >\n                  {/* Header del semestre */}\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <FontAwesomeIcon icon={faCalendarAlt} className=\"text-blue-600\" />\n                    <div>\n                      <h4 className=\"font-bold text-gray-800\">\n                        {semesterPlan.semester}\n                      </h4>\n                      <p className=\"text-xs text-gray-600\">\n                        {semesterPlan.subjects.length} asignaturas • {semesterPlan.credits} créditos\n                      </p>\n                    </div>\n                  </div>\n\n                  {/* Asignaturas */}\n                  <div className=\"space-y-2\">\n                    {semesterPlan.subjects.map((subject) => {\n                      const subjectColor = colors[subject.type]?.[0] || '#6b7280';\n                      return (\n                        <div \n                          key={subject.code}\n                          className=\"p-2 rounded-lg text-white text-xs font-medium shadow-sm\"\n                          style={{ backgroundColor: subjectColor }}\n                        >\n                          <div className=\"font-bold\">{subject.code}</div>\n                          <div className=\"text-white/90 text-xs truncate\" title={subject.name}>\n                            {subject.name}\n                          </div>\n                          <div className=\"text-white/80 text-xs\">\n                            {subject.sctCredits} créditos\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Progress indicator during animation */}\n          {isAnimating && graduationPlan.length > 0 && (\n            <div className=\"mt-6 text-center\">\n              <div className=\"inline-flex items-center gap-2 bg-blue-100 text-blue-800 px-4 py-2 rounded-full\">\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n                <span className=\"text-sm font-medium\">\n                  Mostrando {visibleSemesters} de {totalSemesters} semestres\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/hooks/useCalculator.ts"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport type { Subject, SubjectState, CalculatorState } from '@/types/curriculum';\n\nconst STORAGE_KEY = 'curriculum-progress-inginf';\n\nexport function useCalculator(subjects?: Subject[]) {\n  const [subjectStates, setSubjectStates] = useState<CalculatorState>({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Cargar el progreso guardado al inicializar\n  useEffect(() => {\n    try {\n      const savedProgress = localStorage.getItem(STORAGE_KEY);\n      if (savedProgress) {\n        const parsedProgress = JSON.parse(savedProgress) as CalculatorState;\n        setSubjectStates(parsedProgress);\n      }\n    } catch (error) {\n      console.error('Error loading saved progress:', error);\n    } finally {\n      setIsLoaded(true);\n    }\n  }, []);\n\n  // Guardar el progreso cada vez que cambie el estado\n  useEffect(() => {\n    if (isLoaded && Object.keys(subjectStates).length > 0) {\n      try {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(subjectStates));\n      } catch (error) {\n        console.error('Error saving progress:', error);\n      }\n    }\n  }, [subjectStates, isLoaded]);\n\n  const updateSubjectState = (code: string, state: SubjectState) => {\n    setSubjectStates((prev) => ({ ...prev, [code]: state }));\n  };\n\n  const resetCalculator = () => {\n    setSubjectStates({});\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n    } catch (error) {\n      console.error('Error clearing saved progress:', error);\n    }\n  };\n\n  const calculateCredits = () => {\n    if (!subjects || subjects.length === 0) {\n      return {\n        approvedCredits: 0,\n        totalCredits: 0,\n        approvedSubjects: 0,\n        totalSubjects: 0,\n        percentage: 0,\n      };\n    }\n    let approvedCredits = 0;\n    let totalCredits = 0;\n    let approvedSubjects = 0;\n    let totalSubjects = subjects.length;\n    subjects.forEach((subject) => {\n      totalCredits += Number(subject.sctCredits) || 0;\n      const state = subjectStates[subject.code];\n      if (state?.status === 'approved') {\n        approvedSubjects += 1;\n        approvedCredits += Number(subject.sctCredits) || 0;\n      }\n    });\n    const percentage = totalCredits > 0 ? (approvedCredits / totalCredits) * 100 : 0;\n    return {\n      approvedCredits,\n      totalCredits,\n      approvedSubjects,\n      totalSubjects,\n      percentage,\n    };\n  };\n\n  return {\n    subjectStates,\n    updateSubjectState,\n    resetCalculator,\n    calculateCredits,\n    isLoaded,\n  };\n}\n"],"names":[],"mappings":";;;AACA;;;AAGA,MAAM,cAAc;AAEb,SAAS,cAAc,QAAoB;;IAChD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,CAAC;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,6CAA6C;IAC7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI;gBACF,MAAM,gBAAgB,aAAa,OAAO,CAAC;gBAC3C,IAAI,eAAe;oBACjB,MAAM,iBAAiB,KAAK,KAAK,CAAC;oBAClC,iBAAiB;gBACnB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iCAAiC;YACjD,SAAU;gBACR,YAAY;YACd;QACF;kCAAG,EAAE;IAEL,oDAAoD;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,YAAY,OAAO,IAAI,CAAC,eAAe,MAAM,GAAG,GAAG;gBACrD,IAAI;oBACF,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;gBACnD,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF;QACF;kCAAG;QAAC;QAAe;KAAS;IAE5B,MAAM,qBAAqB,CAAC,MAAc;QACxC,iBAAiB,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAM,CAAC;IACxD;IAEA,MAAM,kBAAkB;QACtB,iBAAiB,CAAC;QAClB,IAAI;YACF,aAAa,UAAU,CAAC;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;YACtC,OAAO;gBACL,iBAAiB;gBACjB,cAAc;gBACd,kBAAkB;gBAClB,eAAe;gBACf,YAAY;YACd;QACF;QACA,IAAI,kBAAkB;QACtB,IAAI,eAAe;QACnB,IAAI,mBAAmB;QACvB,IAAI,gBAAgB,SAAS,MAAM;QACnC,SAAS,OAAO,CAAC,CAAC;YAChB,gBAAgB,OAAO,QAAQ,UAAU,KAAK;YAC9C,MAAM,QAAQ,aAAa,CAAC,QAAQ,IAAI,CAAC;YACzC,IAAI,CAAA,kBAAA,4BAAA,MAAO,MAAM,MAAK,YAAY;gBAChC,oBAAoB;gBACpB,mBAAmB,OAAO,QAAQ,UAAU,KAAK;YACnD;QACF;QACA,MAAM,aAAa,eAAe,IAAI,AAAC,kBAAkB,eAAgB,MAAM;QAC/E,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GAlFgB","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/hooks/useConfetti.ts"],"sourcesContent":["import { useCallback } from 'react';\n\n// Hook para lanzar confetti visual usando canvas-confetti\nexport function useConfetti() {\n  const checkAndTriggerConfetti = useCallback(() => {\n    if (typeof window !== 'undefined') {\n      import('canvas-confetti').then((confetti) => {\n        // Confetti desde la izquierda\n        confetti.default({\n          particleCount: 100,\n          spread: 70,\n          origin: { x: 0.1, y: 0.6 },\n          colors: ['#10b981', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444']\n        });\n        \n        // Confetti desde la derecha\n        confetti.default({\n          particleCount: 100,\n          spread: 70,\n          origin: { x: 0.9, y: 0.6 },\n          colors: ['#10b981', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444']\n        });\n        \n        // Confetti desde el centro superior\n        confetti.default({\n          particleCount: 150,\n          spread: 90,\n          origin: { x: 0.5, y: 0.3 },\n          colors: ['#10b981', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444']\n        });\n        \n        // Confetti adicional desde abajo\n        setTimeout(() => {\n          confetti.default({\n            particleCount: 80,\n            spread: 60,\n            origin: { x: 0.3, y: 0.8 },\n            colors: ['#10b981', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444']\n          });\n          \n          confetti.default({\n            particleCount: 80,\n            spread: 60,\n            origin: { x: 0.7, y: 0.8 },\n            colors: ['#10b981', '#3b82f6', '#8b5cf6', '#f59e0b', '#ef4444']\n          });\n        }, 300);\n      });\n    }\n  }, []);\n\n  return { checkAndTriggerConfetti };\n}\n"],"names":[],"mappings":";;;AAAA;;;AAGO,SAAS;;IACd,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE;YAC1C,wCAAmC;gBACjC,4JAA0B,IAAI;wEAAC,CAAC;wBAC9B,8BAA8B;wBAC9B,SAAS,OAAO,CAAC;4BACf,eAAe;4BACf,QAAQ;4BACR,QAAQ;gCAAE,GAAG;gCAAK,GAAG;4BAAI;4BACzB,QAAQ;gCAAC;gCAAW;gCAAW;gCAAW;gCAAW;6BAAU;wBACjE;wBAEA,4BAA4B;wBAC5B,SAAS,OAAO,CAAC;4BACf,eAAe;4BACf,QAAQ;4BACR,QAAQ;gCAAE,GAAG;gCAAK,GAAG;4BAAI;4BACzB,QAAQ;gCAAC;gCAAW;gCAAW;gCAAW;gCAAW;6BAAU;wBACjE;wBAEA,oCAAoC;wBACpC,SAAS,OAAO,CAAC;4BACf,eAAe;4BACf,QAAQ;4BACR,QAAQ;gCAAE,GAAG;gCAAK,GAAG;4BAAI;4BACzB,QAAQ;gCAAC;gCAAW;gCAAW;gCAAW;gCAAW;6BAAU;wBACjE;wBAEA,iCAAiC;wBACjC;gFAAW;gCACT,SAAS,OAAO,CAAC;oCACf,eAAe;oCACf,QAAQ;oCACR,QAAQ;wCAAE,GAAG;wCAAK,GAAG;oCAAI;oCACzB,QAAQ;wCAAC;wCAAW;wCAAW;wCAAW;wCAAW;qCAAU;gCACjE;gCAEA,SAAS,OAAO,CAAC;oCACf,eAAe;oCACf,QAAQ;oCACR,QAAQ;wCAAE,GAAG;wCAAK,GAAG;oCAAI;oCACzB,QAAQ;wCAAC;wCAAW;wCAAW;wCAAW;wCAAW;qCAAU;gCACjE;4BACF;+EAAG;oBACL;;YACF;QACF;2DAAG,EAAE;IAEL,OAAO;QAAE;IAAwB;AACnC;GAjDgB","debugId":null}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/hooks/useGraduationPlan.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { Subject, SubjectState } from '@/types/curriculum';\n\ninterface SemesterPlan {\n  semester: string; // Cambio de number a string para formato \"2025-1\"\n  subjects: Subject[];\n  credits: number;\n}\n\nexport const useGraduationPlan = (\n  subjects: Subject[], \n  subjectStates: Record<string, SubjectState>\n) => {\n  const [showGraduationPlan, setShowGraduationPlan] = useState(false);\n  const [graduationPlan, setGraduationPlan] = useState<SemesterPlan[]>([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  const isSubjectAvailable = (subject: Subject, completedSubjects: Set<string>): boolean => {\n    return subject.prerequisites.every(prereq => completedSubjects.has(prereq));\n  };\n\n  const getCurrentAcademicLevel = (completedSubjects: Set<string>): string => {\n    // Determinar el nivel académico actual basado en las materias completadas\n    const semesterLevels = ['s1', 's2', 's3', 's4', 's5', 's6', 's7', 's8'];\n    \n    for (let i = semesterLevels.length - 1; i >= 0; i--) {\n      const semesterSubjects = subjects.filter(s => s.semester === semesterLevels[i]);\n      const completedInSemester = semesterSubjects.filter(s => completedSubjects.has(s.code));\n      \n      if (completedInSemester.length > 0) {\n        // Si tiene materias completadas en este semestre, su nivel mínimo es el siguiente\n        return semesterLevels[Math.min(i + 1, semesterLevels.length - 1)];\n      }\n    }\n    \n    // Si no tiene materias completadas, está en s1\n    return 's1';\n  };\n\n  const canTakeSubjectFromSemester = (\n    subjectSemester: string, \n    currentLevel: string, \n    completedSubjects: Set<string>\n  ): boolean => {\n    const semesterLevels = ['s1', 's2', 's3', 's4', 's5', 's6', 's7', 's8'];\n    const currentIndex = semesterLevels.indexOf(currentLevel);\n    const subjectIndex = semesterLevels.indexOf(subjectSemester);\n    \n    // Puede tomar materias de su semestre actual\n    if (subjectIndex === currentIndex) return true;\n    \n    // Puede tomar materias del siguiente semestre solo si:\n    // 1. Es exactamente el siguiente semestre\n    // 2. Tiene prerrequisitos completos\n    if (subjectIndex === currentIndex + 1) {\n      return true; // Los prerrequisitos ya se verifican en isSubjectAvailable\n    }\n    \n    // Puede tomar materias de semestres anteriores si las perdió\n    if (subjectIndex < currentIndex) return true;\n    \n    // No puede adelantar más de un semestre\n    return false;\n  };\n\n  const calculateGraduationPlan = useCallback(() => {\n    // Obtener materias no aprobadas\n    const pendingSubjects = subjects.filter(subject => \n      !subjectStates[subject.code]?.status || \n      subjectStates[subject.code].status !== 'approved'\n    );\n\n    if (pendingSubjects.length === 0) {\n      setGraduationPlan([]);\n      return;\n    }\n\n    // Materias ya completadas\n    const completedSubjects = new Set(\n      subjects\n        .filter(subject => subjectStates[subject.code]?.status === 'approved')\n        .map(subject => subject.code)\n    );\n\n    const plan: SemesterPlan[] = [];\n    const remainingSubjects = [...pendingSubjects];\n    let currentSemester = 1;\n    const maxCreditsPerSemester = 30; // Límite de créditos por semestre en UTFSM\n    const maxCreditsFirstYear = 25; // Límite de créditos para estudiantes de primer año\n    const currentYear = new Date().getFullYear(); // Año actual\n\n    const getSemesterName = (semesterNumber: number): string => {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n      const currentMonth = currentDate.getMonth() + 1; // getMonth() returns 0-11\n      \n      // Determinar el año y semestre base según la fecha actual\n      let baseYear = currentYear;\n      let baseSemester = 1;\n      \n      // Si estamos en agosto o después, el próximo semestre será el segundo semestre del año actual\n      // Si estamos antes de agosto, el próximo semestre será el primer semestre del año actual\n      if (currentMonth >= 8) {\n        // Estamos en el segundo semestre del año actual\n        baseSemester = 2;\n      } else {\n        // Estamos en el primer semestre del año actual o entre semestres\n        baseSemester = 1;\n      }\n      \n      // Calcular el año y semestre para el semestre número 'semesterNumber'\n      const totalSemesters = semesterNumber - 1;\n      const additionalYears = Math.floor(totalSemesters / 2);\n      const semesterInYear = (totalSemesters % 2);\n      \n      const finalYear = baseYear + additionalYears;\n      const finalSemester = ((baseSemester - 1 + semesterInYear) % 2) + 1;\n      \n      // Si el semestre calculado es mayor que 2, incrementar el año\n      if (baseSemester + semesterInYear > 2) {\n        return `${finalYear + 1}-${finalSemester}`;\n      }\n      \n      return `${finalYear}-${finalSemester}`;\n    };\n\n    const getMaxCreditsForLevel = (academicLevel: string): number => {\n      // Estudiantes de primer año (s1 y s2) tienen límite menor\n      return (academicLevel === 's1' || academicLevel === 's2') ? maxCreditsFirstYear : maxCreditsPerSemester;\n    };\n\n    while (remainingSubjects.length > 0 && currentSemester <= 20) { // Máximo 20 semestres\n      // Determinar el nivel académico actual del estudiante\n      const currentAcademicLevel = getCurrentAcademicLevel(completedSubjects);\n      \n      let availableSubjects = remainingSubjects.filter(subject => {\n        // Verificar prerrequisitos\n        const hasPrerequisites = isSubjectAvailable(subject, completedSubjects);\n        // Verificar si puede tomar materias de este semestre según su nivel académico\n        const canTakeBySemester = subject.semester ? \n          canTakeSubjectFromSemester(subject.semester, currentAcademicLevel, completedSubjects) : \n          false;\n        \n        return hasPrerequisites && canTakeBySemester;\n      });\n\n      if (availableSubjects.length === 0) {\n        // Si no hay materias disponibles, avanzar al siguiente semestre\n        currentSemester++;\n        continue;\n      }\n\n      // Ordenar por prioridad: menos prerrequisitos pendientes primero\n      availableSubjects.sort((a, b) => {\n        const aPendingPrereqs = a.prerequisites.filter(prereq => \n          !completedSubjects.has(prereq)\n        ).length;\n        const bPendingPrereqs = b.prerequisites.filter(prereq => \n          !completedSubjects.has(prereq)\n        ).length;\n        return aPendingPrereqs - bPendingPrereqs;\n      });\n\n      // Seleccionar materias para este semestre\n      const semesterSubjects: Subject[] = [];\n      let semesterCredits = 0;\n      const maxCreditsThisSemester = getMaxCreditsForLevel(currentAcademicLevel);\n\n      for (const subject of availableSubjects) {\n        if (semesterCredits + subject.sctCredits <= maxCreditsThisSemester) {\n          semesterSubjects.push(subject);\n          semesterCredits += subject.sctCredits;\n          completedSubjects.add(subject.code);\n          \n          // Remover de materias pendientes\n          const index = remainingSubjects.findIndex(s => s.code === subject.code);\n          if (index !== -1) {\n            remainingSubjects.splice(index, 1);\n          }\n        }\n      }\n\n      if (semesterSubjects.length > 0) {\n        plan.push({\n          semester: getSemesterName(currentSemester),\n          subjects: semesterSubjects,\n          credits: semesterCredits\n        });\n\n        // Verificar si el estudiante avanzó de nivel académico\n        const newAcademicLevel = getCurrentAcademicLevel(completedSubjects);\n        // El nivel académico se actualiza automáticamente en la siguiente iteración\n      }\n\n      currentSemester++;\n    }\n\n    setGraduationPlan(plan);\n  }, [subjects, subjectStates]);\n\n  const playGraduationAnimation = useCallback(() => {\n    calculateGraduationPlan();\n    setShowGraduationPlan(true);\n    setIsAnimating(true);\n\n    // Detener animación después de mostrar todos los semestres\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, graduationPlan.length * 1000 + 2000);\n  }, [calculateGraduationPlan, graduationPlan.length]);\n\n  const closeGraduationPlan = useCallback(() => {\n    setShowGraduationPlan(false);\n    setIsAnimating(false);\n  }, []);\n\n  return {\n    showGraduationPlan,\n    graduationPlan,\n    isAnimating,\n    playGraduationAnimation,\n    closeGraduationPlan\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1301, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcelomejias/Developer/malla-interactiva/src/components/CurriculumGrid.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport SubjectCard from './SubjectCard';\nimport StatsBar from './StatsBar';\nimport GraduationPlanModal from './GraduationPlanModal';\nimport { useCalculator } from '@/hooks/useCalculator';\nimport { useConfetti } from '@/hooks/useConfetti';\nimport { useGraduationPlan } from '@/hooks/useGraduationPlan';\nimport { Subject, SubjectColors } from '@/types/curriculum';\n\nexport default function CurriculumGrid() {\n  const [subjects, setSubjects] = useState<Subject[]>([]);\n  const [colors, setColors] = useState<SubjectColors>({});\n  const [careerName, setCareerName] = useState<string>('');\n  const [careerColor, setCareerColor] = useState<string | undefined>(undefined);\n  const [loading, setLoading] = useState(false);\n  const [showCategoriesPopup, setShowCategoriesPopup] = useState(false);\n  const [showCareerSelector, setShowCareerSelector] = useState(true);\n  const [selectedCareer, setSelectedCareer] = useState<string>('');\n  const [casaCentralCareers, setCasaCentralCareers] = useState<Array<{Nombre: string, Link: string, Color?: string}>>([]);\n  const [vinaConcepcionCareers, setVinaConcepcionCareers] = useState<Array<{Nombre: string, Link: string, Color?: string}>>([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const subjectRefs = useRef<Record<string, HTMLDivElement | null>>({});\n  \n  // Detectar modo oscuro del sistema\n  useEffect(() => {\n    const checkDarkMode = () => {\n      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setDarkMode(isDark);\n    };\n\n    // Verificar al cargar\n    checkDarkMode();\n\n    // Escuchar cambios en el modo del sistema\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    mediaQuery.addEventListener('change', checkDarkMode);\n\n    return () => {\n      mediaQuery.removeEventListener('change', checkDarkMode);\n    };\n  }, []);\n  \n  // Cargar carreras disponibles al iniciar\n  useEffect(() => {\n    const loadCareers = async () => {\n      try {\n        const casaCentralModule = await import('@/data/carreras_casa_central.json');\n        const vinaConcepcionModule = await import('@/data/carreras_vina_concepcion.json');\n        \n        const casaCentralData = casaCentralModule.default as Array<{Nombre: string, Link: string, Color?: string}>;\n        const vinaConcepcionData = vinaConcepcionModule.default as Array<{Nombre: string, Link: string, Color?: string}>;\n        \n        setCasaCentralCareers(casaCentralData);\n        setVinaConcepcionCareers(vinaConcepcionData);\n      } catch (error) {\n        console.error('Error cargando carreras:', error);\n      }\n    };\n    \n    loadCareers();\n  }, []);\n  \n  const { subjectStates, updateSubjectState, resetCalculator, calculateCredits, isLoaded } = useCalculator(subjects);\n  const { checkAndTriggerConfetti } = useConfetti();\n  const { \n    showGraduationPlan, \n    graduationPlan, \n    isAnimating, \n    playGraduationAnimation, \n    closeGraduationPlan \n  } = useGraduationPlan(subjects, subjectStates);\n\n  useEffect(() => {\n    const loadCareerData = async (careerLink: string) => {\n      try {\n        setLoading(true);\n        \n        // Cargar datos de la carrera específica\n        const dataModule = await import(`@/data/data_${careerLink}.json`);\n        const colorsModule = await import(`@/data/colors_${careerLink}.json`);\n        \n        // Buscar la carrera en ambos campus\n        const allCareers = [...casaCentralCareers, ...vinaConcepcionCareers];\n        const career = allCareers.find(carrera => carrera.Link === careerLink);\n\n        const data = dataModule.default as Record<string, unknown[][]>;\n        const colorsData = colorsModule.default as Record<string, string[]>;\n\n        // Obtener el nombre y color de la carrera\n        const careerNameFromJson = career?.Nombre || 'Carrera Desconocida';\n        setCareerName(careerNameFromJson);\n        setCareerColor(career?.Color);\n        \n        // Procesar datos\n        const processedSubjects: Subject[] = [];\n        \n        Object.entries(data).forEach(([semester, semesterSubjects]) => {\n          semesterSubjects.forEach((subjectArray: unknown[]) => {\n            const [name, code, usmCredits, sctCredits, type, prerequisites] = subjectArray;\n            processedSubjects.push({\n              name: name as string,\n              code: code as string,\n              usmCredits: usmCredits as string,\n              sctCredits: Number(sctCredits), // Asegurar conversión a número\n              type: type as string,\n              prerequisites: (prerequisites || []) as string[],\n              semester\n            });\n          });\n        });\n\n        setSubjects(processedSubjects);\n        setColors(colorsData);\n        setLoading(false);\n        setShowCareerSelector(false);\n      } catch (error) {\n        console.error('Error loading career data:', error);\n        setLoading(false);\n      }\n    };\n\n    // Solo cargar si hay una carrera seleccionada\n    if (selectedCareer) {\n      loadCareerData(selectedCareer);\n    }\n  }, [selectedCareer]);\n\n  // Función para seleccionar carrera\n  const handleCareerSelection = (careerLink: string) => {\n    setSelectedCareer(careerLink);\n  };\n\n  const stats = calculateCredits();\n\n  // Verificar si se alcanzó el 100% para lanzar confetti\n  useEffect(() => {\n    if (stats.percentage >= 100) {\n      checkAndTriggerConfetti();\n    }\n  }, [stats.percentage, checkAndTriggerConfetti]);\n\n  const getSemesterSubjects = (semester: string) => {\n    return subjects.filter(subject => subject.semester === semester);\n  };\n\n  const getSemesterTitle = (semester: string) => {\n    const semesterNumber = semester.replace('s', '');\n    return `${semesterNumber}° Semestre`;\n  };\n\n  const getSemesterCredits = (semester: string) => {\n    return getSemesterSubjects(semester).reduce((total, subject) => total + Number(subject.sctCredits), 0);\n  };\n\n  const getSemesterApprovedCredits = (semester: string) => {\n    return getSemesterSubjects(semester).reduce((total, subject) => {\n      const state = subjectStates[subject.code];\n      return total + (state?.status === 'approved' ? Number(subject.sctCredits) : 0);\n    }, 0);\n  };\n\n  const scrollToSubject = (subjectCode: string) => {\n    const element = subjectRefs.current[subjectCode];\n    if (element) {\n      element.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'center' \n      });\n      // Destacar brevemente la tarjeta con animación\n      element.classList.add('ring-4', 'ring-blue-400', 'ring-opacity-75', 'transform', 'scale-105');\n      setTimeout(() => {\n        element.classList.remove('ring-4', 'ring-blue-400', 'ring-opacity-75', 'transform', 'scale-105');\n      }, 2000);\n    }\n  };\n\n  const findSubjectByCode = (code: string): Subject | undefined => {\n    return subjects.find(subject => subject.code === code);\n  };\n\n  if ((loading && selectedCareer) || (!isLoaded && subjects.length > 0)) {\n    return (\n      <div className={`flex items-center justify-center min-h-screen ${darkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n        <div className=\"flex flex-col items-center gap-4\">\n          <div className={`animate-spin rounded-full h-32 w-32 border-b-2 ${darkMode ? 'border-blue-400' : 'border-blue-600'}`}></div>\n          <p className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n            {loading ? 'Cargando malla curricular...' : 'Restaurando progreso...'}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`min-h-screen p-2 pb-32 ${darkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      <div className=\"w-full mx-auto\">\n        {/* Contenido principal - solo mostrar si hay carrera seleccionada */}\n        {selectedCareer && !showCareerSelector && (\n          <>\n            {/* Malla por semestres - Vista en columnas */}\n            <div className=\"p-4\">\n              <h2\n                className=\"text-xl font-bold mb-6 text-center\"\n                style={careerColor ? { color: careerColor } : {}}\n              >\n                {careerName}\n              </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-8 gap-2\">\n            {Array.from({ length: 8 }, (_, i) => `s${i + 1}`).map((semester) => {\n              const semesterSubjects = getSemesterSubjects(semester);\n              const semesterCredits = getSemesterCredits(semester);\n              const approvedCredits = getSemesterApprovedCredits(semester);\n              \n              if (semesterSubjects.length === 0) return null;\n\n              return (\n                <div key={semester} className={`flex flex-col w-full rounded-2xl shadow-md border ${\n                  darkMode ? 'bg-gray-800 border-gray-700' : 'bg-gray-100 border-gray-200'\n                }`}>\n                  {/* Header del semestre */}\n                  <div className={`rounded-t-2xl p-3 text-center border-b ${\n                    darkMode ? 'bg-gray-700 border-gray-600' : 'bg-gray-200 border-gray-300'\n                  }`}>\n                    <h3 className={`font-bold text-sm ${\n                      darkMode ? 'text-gray-100' : 'text-gray-800'\n                    }`}>\n                      {getSemesterTitle(semester)}\n                    </h3>\n                    <div className={`text-xs mt-1 ${\n                      darkMode ? 'text-gray-300' : 'text-gray-700'\n                    }`}>\n                      <span className=\"font-medium\">{approvedCredits}</span>\n                      <span className=\"mx-1\">/</span>\n                      <span>{semesterCredits} créditos</span>\n                    </div>\n                    <div className={`w-full rounded-full h-2 mt-2 overflow-hidden ${\n                      darkMode ? 'bg-gray-600' : 'bg-gray-300'\n                    }`}>\n                      <div \n                        className=\"bg-gradient-to-r from-blue-500 to-indigo-500 h-2 rounded-full transition-all duration-500 shadow-sm\"\n                        style={{ width: `${semesterCredits > 0 ? (approvedCredits / semesterCredits) * 100 : 0}%` }}\n                      />\n                    </div>\n                  </div>\n                  \n                  {/* Asignaturas del semestre */}\n                  <div className=\"flex flex-col gap-3 p-3 rounded-b-2xl\">\n                    {semesterSubjects.map((subject) => (\n                      <div\n                        key={subject.code}\n                        ref={(el) => {\n                          subjectRefs.current[subject.code] = el;\n                        }}\n                        className=\"transition-all duration-300 ease-in-out\"\n                      >\n                        <SubjectCard\n                          subject={subject}\n                          state={subjectStates[subject.code]}\n                          onStateChange={(state) => updateSubjectState(subject.code, state)}\n                          color={colors[subject.type]?.[0] || '#6B7280'}\n                          categoryName={colors[subject.type]?.[1] || 'Sin categoría'}\n                          onPrerequisiteClick={scrollToSubject}\n                          findSubjectByCode={findSubjectByCode}\n                          subjectStates={subjectStates}\n                          colors={colors}\n                          darkMode={darkMode}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className={`mt-12 text-center text-sm ${\n          darkMode ? 'text-gray-400' : 'text-gray-500'\n        }`}>\n          <p>Universidad Técnica Federico Santa María</p>\n          <p>{careerName}</p>\n        </div>\n        </>\n        )}\n      </div>\n\n      {/* Barra flotante de estadísticas - solo mostrar si hay carrera seleccionada */}\n      {selectedCareer && !showCareerSelector && (\n        <StatsBar\n          stats={stats}\n          onShowCategories={() => setShowCategoriesPopup(true)}\n          onReset={resetCalculator}\n          onPlayGraduationPlan={playGraduationAnimation}\n          darkMode={darkMode}\n        />\n      )}\n\n      {/* Popup de categorías - solo mostrar si hay carrera seleccionada */}\n      {showCategoriesPopup && selectedCareer && !showCareerSelector && (\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm z-60 flex items-center justify-center p-4\">\n          <div className={`backdrop-blur-lg rounded-3xl shadow-2xl border max-w-4xl w-full max-h-[80vh] overflow-hidden ${\n            darkMode ? 'bg-gray-800/95 border-gray-600' : 'bg-white/95 border-white/30'\n          }`}>\n            {/* Header del popup */}\n            <div className={`backdrop-blur-lg text-white p-6 flex items-center justify-between ${\n              darkMode ? 'bg-gray-700/80' : 'bg-gradient-to-r from-blue-600/80 to-indigo-600/80'\n            }`}>\n              <div className=\"flex items-center gap-3\">\n                <div className={`w-8 h-8 backdrop-blur-sm rounded-2xl flex items-center justify-center ${\n                  darkMode ? 'bg-gray-600/50' : 'bg-white/20'\n                }`}>\n                  <FontAwesomeIcon icon={faInfoCircle} className=\"text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-bold\">Categorías de Asignaturas</h3>\n                  <p className=\"text-sm text-white/80\">\n                    Colores utilizados para organizar las materias por área\n                  </p>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowCategoriesPopup(false)}\n                className={`text-white/80 hover:text-white transition-colors p-2 rounded-2xl backdrop-blur-sm ${\n                  darkMode ? 'hover:bg-gray-600/30' : 'hover:bg-white/10'\n                }`}\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n            \n            {/* Contenido del popup */}\n            <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {Object.entries(colors).map(([key, colorArray]) => (\n                  <div \n                    key={key} \n                    className={`backdrop-blur-sm rounded-2xl p-4 transition-all duration-300 border hover:shadow-lg ${\n                      darkMode \n                        ? 'bg-gray-700/50 hover:bg-gray-700/70 border-gray-600' \n                        : 'bg-white/50 hover:bg-white/60 border-gray-200'\n                    }`}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <div \n                        className=\"w-6 h-6 rounded-full shadow-lg border-2 border-white/30 flex-shrink-0\"\n                        style={{ backgroundColor: colorArray[0] }}\n                      />\n                      <div className=\"flex-1\">\n                        <span className={`text-sm font-medium ${\n                          darkMode ? 'text-gray-200' : 'text-gray-800'\n                        }`}>{colorArray[1]}</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Popup selector de carreras */}\n      {showCareerSelector && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-70 flex items-center justify-center p-4\">\n          <div className={`backdrop-blur-lg rounded-3xl shadow-2xl border max-w-5xl w-full max-h-[80vh] overflow-hidden ${\n            darkMode ? 'bg-gray-800/95 border-gray-600' : 'bg-white/95 border-white/30'\n          }`}>\n            {/* Header */}\n            <div className={`backdrop-blur-sm border-b p-6 ${\n              darkMode ? 'bg-gray-700/50 border-gray-600' : 'bg-gray-50/80 border-gray-200'\n            }`}>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className={`text-2xl font-bold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\n                    Selecciona tu Carrera\n                  </h2>\n                  <p className={`text-sm mt-1 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                    Elige la carrera para ver su malla curricular interactiva\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Contenido del popup */}\n            <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n              {/* Sección Casa Central / San Joaquín */}\n              <div className=\"mb-8\">\n                <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-800'}`}>\n                  Casa Central / San Joaquín\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {casaCentralCareers.map((career) => (\n                    <button\n                      key={career.Link}\n                      onClick={() => handleCareerSelection(career.Link)}\n                      className={`backdrop-blur-sm rounded-2xl p-4 transition-all duration-300 border hover:shadow-lg hover:scale-105 text-left ${\n                        darkMode \n                          ? 'bg-gray-700/30 border-gray-600 hover:bg-gray-600/40' \n                          : 'bg-white/40 border-white/50 hover:bg-white/60'\n                      }`}\n                      style={{ \n                        borderColor: career.Color ? `${career.Color}40` : undefined,\n                        backgroundColor: career.Color ? `${career.Color}10` : undefined\n                      }}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <div \n                          className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                          style={{ backgroundColor: career.Color || '#6B7280' }}\n                        />\n                        <div className=\"flex-1\">\n                          <span className={`text-sm font-medium ${\n                            darkMode ? 'text-gray-200' : 'text-gray-800'\n                          }`}>\n                            {career.Nombre}\n                          </span>\n                          <div className={`text-xs mt-1 ${\n                            darkMode ? 'text-gray-400' : 'text-gray-600'\n                          }`}>\n                            {career.Link}\n                          </div>\n                        </div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Sección Viña del Mar / Concepción */}\n              <div>\n                <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-800'}`}>\n                  Viña del Mar / Concepción\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {vinaConcepcionCareers.map((career) => (\n                    <button\n                      key={career.Link}\n                      onClick={() => handleCareerSelection(career.Link)}\n                      className={`backdrop-blur-sm rounded-2xl p-4 transition-all duration-300 border hover:shadow-lg hover:scale-105 text-left ${\n                        darkMode \n                          ? 'bg-gray-700/30 border-gray-600 hover:bg-gray-600/40' \n                          : 'bg-white/40 border-white/50 hover:bg-white/60'\n                      }`}\n                      style={{ \n                        borderColor: career.Color ? `${career.Color}40` : undefined,\n                        backgroundColor: career.Color ? `${career.Color}10` : undefined\n                      }}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <div \n                          className=\"w-4 h-4 rounded-full flex-shrink-0\"\n                          style={{ backgroundColor: career.Color || '#6B7280' }}\n                        />\n                        <div className=\"flex-1\">\n                          <span className={`text-sm font-medium ${\n                            darkMode ? 'text-gray-200' : 'text-gray-800'\n                          }`}>\n                            {career.Nombre}\n                          </span>\n                          <div className={`text-xs mt-1 ${\n                            darkMode ? 'text-gray-400' : 'text-gray-600'\n                          }`}>\n                            {career.Link}\n                          </div>\n                        </div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Modal del plan de graduación */}\n      <GraduationPlanModal\n        show={showGraduationPlan}\n        graduationPlan={graduationPlan}\n        isAnimating={isAnimating}\n        onClose={closeGraduationPlan}\n        colors={colors}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}